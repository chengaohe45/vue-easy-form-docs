(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{169:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"组件化标准写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件化标准写法","aria-hidden":"true"}},[t._v("#")]),t._v(" 组件化标准写法")]),t._v(" "),a("p",[t._v("组件化是指某个属性根据实际要求，按一定的格式引入Vue组件；目前支持组件化的属性有：项标签label、描述desc、帮助help、单元unit、标题title、项组件component，当然，这些属性都有自己其它的写法，具体的写法见各属性详解。")]),t._v(" "),a("p",[t._v("引入一个组件(从一个Object开始)：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("属性名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表单配置属性名如：label, help")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"el-input"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个是不支持es写法，也就是一经固定，不支持改变")]),t._v("\n  props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Vue组件需要的属性")]),t._v("\n    type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"textarea"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值固定写法")]),t._v("\n    placeholder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"es: {{$root}}.isOpen ? '提示1' : '提示2'\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 支持es写法")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// options => {global, rootData, idxChain, index, pathKey, $hidden}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("disabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 支持函数写法, options返回构造需要的参数")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rootData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isOpen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"文本描述"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有些组件不支持这个；就是default-slot")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("运用函数构造Vue属性，options所携带的信息：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("global")]),t._v("：form属性的global")]),t._v(" "),a("li",[a("code",[t._v("rootData")]),t._v("：表单的原始值（隐藏的项值也会取出）")]),t._v(" "),a("li",[a("code",[t._v("pathKey")]),t._v("：项组件的路径")]),t._v(" "),a("li",[a("code",[t._v("idxChain")]),t._v("： 项组件所要数组所组成的id 如: 1,2")]),t._v(" "),a("li",[a("code",[t._v("index")]),t._v("：项组件处于数组的子节点(非孙子)时的索引，其余的返回-1")]),t._v(" "),a("li",[a("code",[t._v("$hidden")]),t._v('：函数。判断某项是否处于隐藏，这个函数会自动匹配所处于哪个表单，所以参数只需要传入一个pathKey。如: $hidden("base.name"),')])]),t._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[a("code",[t._v("没有this指针")]),t._v(" 当props里的的属性（如：disabled）写成一个函数时，this并不指向表单的。\n为什么? 因为当执行这些函数时，表单内的组件正处于未构造或正在重复构造，不建议调用表单内的函数(如：form.getValue等)；这个与验证rules.checks、数组array.insertValue、项组件component.actions里面的函数不同，后者们的this是指向表单的")])])])}],!1,null,null,null);s.default=e.exports}}]);